{"version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/vmaudgalya/Desktop/sam"],"buffers":[{"id":"e749664551605df7659e1cc136bb5b51","text":"require 'sinatra'\nrequire 'json'\n\npost '/event_handler' do\n  @payload = JSON.parse(params[:payload])\n\n  case request.env['HTTP_X_GITHUB_EVENT']\n\n    when \"pull_request\"\n      if @payload[\"action\"] == \"closed\" && @payload[\"pull_request\"][\"merged\"]\n        puts \"A pull request was merged! A deployment should start now...\"\n        deploy_docs(@payload[\"pull_request\"])\n      end\n\n    # when \"deployment\"\n    #   process_deployment(@payload)\n    #\n    # when \"deployment_status\"\n    #   update_deployment_status\n\n  end\nend\n\ndef deploy_docs(pull_request)\n  # user = pull_request['user']['login']\n  # payload = JSON.generate(:environment => 'production', :deploy_user => user)\n  # @client.create_deployment(pull_request['head']['repo']['full_name'], pull_request['head']['sha'], {:payload => payload, :description => \"Deploying my sweet branch\"})\n\n  # 0. Kill any existing servers        [ kill $(ps aux | grep \\\"[y]uidoc --server .\\\" |  awk '{print $2}') ]\n  # 1. Move 1 directory upwards         [ cd .. ]\n  # 2. Remove old code directory        [ rm -rf mep-docs/ ]\n  # 3. Pull new code down               [ git clone https://github.paypal.com/vmaudgalya/mep-docs.git ]\n  # 4. Change directory into mep-docs/  [ cd mep-docs/ ]\n  # 5. Build the docs                   [ yuidoc . ]\n  # 6. Host it on a server              [ yuidoc --server . ]\n\n  kill_existing_server = `kill $(ps aux | grep \\\"[y]uidoc --server .\\\" |  awk '{print $2}')`\n  move_up_directory = `cd ..`\n  remove_old_code = `rm -rf mep-docs/`\n  pull_new_code = `git clone https://github.paypal.com/vmaudgalya/mep-docs.git`\n  change_directory = `cd mep-docs/`\n  build_docs = `yuidoc .`\n  serve_docs = `yuidoc --server .`\nend\n\n# def process_deployment\n  # payload = JSON.parse(@payload['payload'])\n  # you can send this information to your chat room, monitor, pager, e.t.c.\n  # puts \"Processing '#{@payload['description']}' for #{payload['deploy_user']} to #{payload['environment']}\"\n\n  # sleep 2 # simulate work\n  # @client.create_deployment_status(\"repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}\", 'pending')\n  # sleep 2 # simulate work\n  # @client.create_deployment_status(\"repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}\", 'success')\n# end\n\n# def update_deployment_status\n#   puts \"Deployment status for #{@payload['id']} is #{@payload['state']}\"\n# end","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":41,"column":16},"end":{"row":41,"column":24}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":4,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/Desktop/sam/app.rb","digestWhenLastPersisted":"00287e9534a06237254fe09dab637301f5ea6d9e","preferredLineEnding":null,"nextMarkerId":16,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":11,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/Desktop/sam/app.rb","bufferId":"e749664551605df7659e1cc136bb5b51","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/vmaudgalya/Desktop/sam/app.rb","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/vmaudgalya/Desktop/sam/mep-docs/Actions.js"]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-03-09T07:17:40.907Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/Users/vmaudgalya/Desktop/sam/app.rb","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/Users/vmaudgalya/Desktop/sam/app.rb":1457385954088},"metrics":{"sessionLength":122489229},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/vmaudgalya/Desktop/sam":{"isExpanded":true,"entries":{"out":{"isExpanded":true,"entries":{}},"mep-docs":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/vmaudgalya/Desktop/sam/app.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}
{"version":1,"windowDimensions":{"x":0,"y":0,"width":1440,"height":896,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client"],"buffers":[{"id":"b797c620ca64f9e448ca59f701d716db","text":"'use strict';\n/*\n 'use strict' is not required but helpful for turning syntactical errors into true errors in the program flow\n https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode\n*/\n\n/*\n Modules make it possible to import JavaScript files into your application.  Modules are imported\n using 'require' statements that give you a reference to the module.\n\n  It is a good idea to list the modules that your application depends on in the package.json in the project root\n */\nvar util = require('util');\nvar logger = require('../')\n\n/*\n Once you 'require' a module you can reference the things that it exports.  These are defined in module.exports.\n\n For a controller in a127 (which this is) you should export the functions referenced in your Swagger document by name.\n\n Either:\n  - The HTTP Verb of the corresponding operation (get, put, post, delete, etc)\n  - Or the operationId associated with the operation in your Swagger document\n\n  In the starter/skeleton project the 'get' operation on the '/hello' path has an operationId named 'hello'.  Here,\n  we specify that in the exports of this module that 'hello' maps to the function named 'hello'\n */\nmodule.exports = {\n  hello: hello\n};\n\n/*\n  Functions in a127 controllers used for operations should take two parameters:\n\n  Param 1: a handle to the request object\n  Param 2: a handle to the response object\n */\nfunction hello(req, res) {\n  // variables defined in the Swagger document can be referenced using req.swagger.params.{parameter_name}\n  var name = req.swagger.params.name.value || 'stranger';\n  var hello = util.format('Hello, %s!', name);\n\n  // this sends back a JSON response which is a single string\n  res.json(hello);\n}\n\nfunction createApp(req, res) {\n  // create a new app in the database\n}\n\nfunction updateApp(req, res) {\n  // update the app in its entirety\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/controllers/hello_world.js","digestWhenLastPersisted":"3900c8d8a93cc7e12271d4bc0c2173b1a4219bd2","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"3cdfe6ac1169312be80a85471ceaed49","text":"var r = require('rethinkdb');\nvar connection = null;\n\nr.connect( {host: 'localhost', port: 28016}, function(err, conn) {\n    if (err) throw err;\n    connection = conn;\n});\n\nmodule.exports.getConnection = function() {\n  return connection;\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/db.js","digestWhenLastPersisted":"17866d588f6753a5ce6bfa7f20d030b6ed54ad30","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"92218cfad7e18eb9549ab5d2c0e54b55","text":"var bunyan = require('bunyan');\nmodule.exports = bunyan.createLogger({name: 'mep-app-store'});\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/logger.js","digestWhenLastPersisted":"10633816ebc9a9306e8f87072a7c3ceb77ff11a1","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"f36f7dbc83634b66431fa081d071dcfd","text":"import Reflux from 'Reflux'\nimport Actions from '../actions'\n\nlet state = {\n  isUpdating: false,\n  selectedIndex: 0\n}\n\nconst Store = Reflux.createStore({\n  listenables: [Actions],\n\n  getInitialState() {\n    return state;\n  },\n\n  onChangeMode(selectedIndex, selection) {\n    if (selection === 'Update') {\n      state.isUpdating = true\n    } else {\n      state.isUpdating = false\n    }\n    state.selectedIndex = selectedIndex\n    this.trigger(state)\n  },\n\n  onCreateAppCompleted(response) {\n\n  },\n\n  onCreateAppFailed(response) {\n    console.log('Server is currently down: ' + JSON.stringify(repsonse))  \n  }\n\n})\n\nexport default Store\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/stores/index.js","digestWhenLastPersisted":"65911b62eae2050db6356356946e83a4cbbba819","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"28d9fe32e87534cb5c8135b730fbd1ee","text":"import Reflux from 'Reflux'\nimport React from 'react'\nimport { RaisedButton, TextField, SelectField } from 'material-ui'\nimport Actions from '../actions'\nimport Store from '../stores'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\ninjectTapEventPlugin()\n\nconst AppDetails = React.createClass({\n\n  mixins: [Reflux.connect(Store)],\n\n  _handleAppId(e) {\n    this.setState({ appId: e.target.value })\n  },\n\n  _handleAppName(e) {\n    this.setState({ appName: e.target.value })\n  },\n\n  _handleAppSource(e) {\n    this.setState({ appSource: e.target.value })\n  },\n\n  _handleAppVersion(e) {\n    this.setState({ appVersion: e.target.value })\n  },\n\n  _handleAuthId(e) {\n    this.setState({ authId: e.target.value })\n  },\n\n  _handleAuthorEmail(e) {\n    this.setState({ authorEmail: e.target.value })\n  },\n\n  _handleAuthorName(e) {\n    this.setState({ authorName: e.target.value })\n  },\n\n  _handleCategory(e) {\n    this.setState({ category: e.target.value })\n  },\n\n  _handleCountry(e) {\n    this.setState({ country: e.target.value })\n  },\n\n  _handleDefaultLocale(e) {\n    this.setState({ defaultLocale: e.target.value })\n  },\n\n  _handleDescription(e) {\n    this.setState({ description: e.target.value })\n  },\n\n  _handleThumbnailIconLink(e) {\n    this.setState({ thumbnailIconLink: e.target.value })\n  },\n\n  _handleSmallIconLink(e) {\n    this.setState({ smallIconLink: e.target.value })\n  },\n\n  _handleMediumIconLink(e) {\n    this.setState({ mediumIconLink: e.target.value })\n  },\n\n  _handleModeChange(e, selectedIndex, menuItem) {\n    Actions.changeMode(selectedIndex, menuItem.text)\n  },\n\n\n  _validateFieldsPopulated() {\n    if (\n      this.state.appId &&\n      this.state.appName &&\n      this.state.appSource &&\n      this.state.appVersion &&\n      this.state.authId &&\n      this.state.authorEmail &&\n      this.state.authorName &&\n      this.state.category &&\n      this.state.country &&\n      this.state.defaultLocale &&\n      this.state.description &&\n      this.state.thumbnailIconLink &&\n      this.state.smallIconLink &&\n      this.state.mediumIconLink\n    ) {\n        return false\n      }\n    return true\n  },\n\n  _handleAppSubmit() {\n    // if update is selected, do an update, otherwise do an insert\n    //let today = new Date()\n    let app = {\n      appId: this.state.appId,\n      appName: this.state.appName,\n      appSource: this.state.appSource,\n      appVersion: this.state.appVersion,\n      authId: this.state.authId,\n      authorEmail: this.state.authorEmail,\n      authorName: this.state.authorName,\n      category: this.state.category,\n      country: this.state.country,\n      defaultLocale: this.state.defaultLocale,\n      description: this.state.description,\n      thumbnailIconLink: this.state.thumbnailIconLink,\n      smallIconLink: this.state.smallIconLink,\n      mediumIconLink: this.state.mediumIconLink\n    }\n    if (this.state.isUpdating) {\n      // Actions.updateApp(app)\n    } else {\n      Actions.createApp(app)\n    }\n    // show a message stating it went through\n  },\n\n  render() {\n    let options = [\n       { payload: '1', text: 'Create' },\n       { payload: '2', text: 'Update' }\n    ]\n\n    return (\n      <div style={{textAlign: 'center'}} >\n        <h1> App Store Client </h1>\n        <h2> I want to\n          <SelectField\n            style={{marginLeft: 20, marginRight: 20, marginTop: 50}}\n            selectedIndex={this.state.selectedIndex}\n            ref=\"optionMenu\"\n            menuItems={options}\n            onChange={this._handleModeChange} /> my app </h2>\n\n            <div className=\"subsection\">\n              <h3> Application </h3>\n              <TextField floatingLabelText=\"Id\" /> <br />\n              <TextField floatingLabelText=\"Name\" /> <br />\n              <TextField floatingLabelText=\"Source\" /> <br />\n              <TextField floatingLabelText=\"Version\" />\n            </div>\n            <div className=\"subsection\">\n              <h3> Author </h3>\n              <TextField floatingLabelText=\"Auth Id\" /> <br />\n              <TextField floatingLabelText=\"Email\" /> <br />\n              <TextField floatingLabelText=\"Name\" />\n            </div>\n              <h3> Metadata </h3>\n              <TextField floatingLabelText=\"Category\" /> <br />\n              <TextField floatingLabelText=\"Country\" /> <br />\n              <TextField floatingLabelText=\"Default Locale\" /> <br />\n              <TextField floatingLabelText=\"Description\" />\n            <div className=\"subsection\">\n              <h3> Icons </h3>\n              <TextField floatingLabelText=\"Thumbnail\" /> <br />\n              <TextField floatingLabelText=\"Small\" /> <br />\n              <TextField floatingLabelText=\"Medium\" />\n            </div>\n            <br />\n            <RaisedButton label={this.state.isUpdating ? 'Update' : 'Submit'} disabled={this._validateFieldsPopulated()}/>\n\n      </div>\n    )\n  }\n\n})\n\nexport default AppDetails\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/components/Form.jsx","digestWhenLastPersisted":"84a42c1cba7856754d8519096ca48295a824529c","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"b67dd25243a22247bf6db1cbe4a10b0c","text":"import Reflux from 'Reflux'\nimport $ from 'jquery'\n\nconst Actions = Reflux.createActions({\n\n  createApp : { children: [\"completed\", \"failed\"] },\n  changeMode: {},\n  updateApp : { children: [\"completed\", \"failed\"] },\n  deleteApp : { children: [\"completed\", \"failed\"] }\n\n})\n\nActions.createApp.listen(function (app) {\n  $.ajax({\n      url: \"http://localhost:10010/mep-app-store/app\",\n      type: \"post\",\n      contentType: \"application/json\",\n      data: JSON.stringify(app)\n  }).done(this.completed.bind(this))\n  .fail(this.failed.bind(this))\n})\n\nexport default Actions\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js","digestWhenLastPersisted":"54980dd821cf4348cebe0761a4f7b5c0bb4b26bc","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":380,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":381,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/controllers/hello_world.js","bufferId":"b797c620ca64f9e448ca59f701d716db","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":408,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":409,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/stores/index.js","bufferId":"f36f7dbc83634b66431fa081d071dcfd","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":412,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":413,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/components/Form.jsx","bufferId":"28d9fe32e87534cb5c8135b730fbd1ee","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":416,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":417,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js","bufferId":"b67dd25243a22247bf6db1cbe4a10b0c","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":396,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":397,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/db.js","bufferId":"3cdfe6ac1169312be80a85471ceaed49","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":404,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":405,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/logger.js","bufferId":"92218cfad7e18eb9549ab5d2c0e54b55","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-babel","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/README.md","/Users/vmaudgalya/.Trash/main.jsx","/Users/vmaudgalya/.Trash/main.css","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/www/main.scss","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/package.json","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/webpack-dev-server.config.js","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/.eslintrc","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/app/stores/index.js","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/app/actions/index.js","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/app/App.jsx","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/app/app.jsx","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/www/index.html","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/README.md","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/package.json","/Users/vmaudgalya/.Trash/README 01-03-14-893.md","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/src/app/components/Form.jsx","/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/README.md","/Users/vmaudgalya/.Trash/README 01-07-39-500.md"]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-01-21T01:44:24.964Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"380":{"id":380,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/controllers/hello_world.js","colorMarkers":[]},"396":{"id":396,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/db.js","colorMarkers":[]},"404":{"id":404,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/logger.js","colorMarkers":[]},"408":{"id":408,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/stores/index.js","colorMarkers":[]},"412":{"id":412,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/components/Form.jsx","colorMarkers":[]},"416":{"id":416,"path":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js","colorMarkers":[]}},"paths":["/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/www/main.scss"],"variables":{"deserializer":"VariablesCollection","content":[]}}},"find-and-replace":{"findOptions":{"findPattern":"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/controllers/hello_world.js":1453340646275,"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/stores/index.js":1453340657897,"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/components/Form.jsx":1453340659809,"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js":1453340661001,"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/db.js":1451380135570,"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/server/api/lib/logger.js":1451380109042},"keybinding-resolver":{},"metrics":{"sessionLength":18700},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"client":{"isExpanded":true,"entries":{"node_modules":{"isExpanded":false,"entries":{}},"src":{"isExpanded":true,"entries":{"app":{"isExpanded":true,"entries":{"actions":{"isExpanded":true,"entries":{}},"components":{"isExpanded":true,"entries":{}},"stores":{"isExpanded":true,"entries":{}}}},"www":{"isExpanded":false,"entries":{}}}}}},"server":{"isExpanded":true,"entries":{"api":{"isExpanded":true,"entries":{"controllers":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":true,"entries":{}},"mocks":{"isExpanded":false,"entries":{}},"swagger":{"isExpanded":false,"entries":{}}}},"config":{"isExpanded":true,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"test":{"isExpanded":false,"entries":{}}}}}}},"selectedPath":"/Users/vmaudgalya/projects/merchant-experience-platform/app-store-client/client/src/app/actions/index.js","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}
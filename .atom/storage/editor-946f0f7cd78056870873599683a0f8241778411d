{"version":1,"windowDimensions":{"x":0,"y":0,"width":1440,"height":873,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/vmaudgalya/projects/personal/dashboard"],"buffers":[{"id":"b0451cf055b46a35d2c7fe3f36688537","text":"import React, { Component } from 'react'\nimport { History } from 'react-router'\n\nclass App extends Component {\n  constructor(){\n    super()\n  }\n\n  render(){\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default App\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/App.js","digestWhenLastPersisted":"d8082ecfef87da881e6e376af7c0ebc68817e786","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"7faa52e554aa4ad58c386a37ff74606d","text":"import Reflux from 'Reflux'\nimport React, { Component } from 'react'\nimport { Card, FlatButton, RaisedButton, TextField, AppBar, Tabs, Tab } from 'material-ui'\nimport DrugDetails from './DrugDetails'\nimport DrugList from './DrugList'\nimport DashboardActions from '../actions/DashboardActions'\nimport Store from '../stores'\nimport { History } from 'react-router'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\ninjectTapEventPlugin()\n\nconst Container = React.createClass({\n\n  mixins: [Reflux.connect(Store), History],\n\n  _handleChangeTabs(value, e, tab) {\n    DashboardActions.switchTab(value)\n  },\n\n  componentDidUpdate() {\n    if (!this.state.username) {\n      console.info('redirecting unauthorized user')\n      this.history.pushState(null, '/login', null)\n    }\n  },\n\n  componentWillMount() {\n    if (!this.state.username) {\n      console.info('redirecting unauthorized user')\n      this.history.pushState(null, '/login', null)\n    }\n  },\n\n  _handleLogout() {\n    console.log('logging out')\n    DashboardActions.logout(this.state.username);\n  },\n\n  render() {\n    var styles = {\n      appBar: {\n        flexWrap: 'wrap'\n      },\n      tabs: {\n        paddingTop: '20px',\n        width: '20%',\n        marginRight: '30px'\n      },\n      tab: {\n        paddingBottom: '10px',\n        fontSize: '18px'\n      },\n      inkBar: {\n        backgroundColor: 'rgb(239, 249, 58)'\n      },\n      logout: {\n        paddingBottom: '10px',\n        fontSize: '18px',\n        margin: '0px 0px',\n        paddingRight: '10px',\n        paddingTop: '20px',\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        color: 'rgba(255, 255, 255, 0.55)'\n      }\n    }\n\n    let view = (this.state.selectedTab === '0' ? <DrugDetails /> : <DrugList />)\n    return (\n      <div>\n        <AppBar style={styles.appBar} title=\"Medical App\" showMenuIconButton={false} >\n          <Tabs style={styles.tabs} onChange={this._handleChangeTabs} inkBarStyle={styles.inkBar} value={this.state.selectedTab}>\n            <Tab style={styles.tab} label={(this.state.isEditing && (this.state.selectedTab === '0')) ? \"EDIT\" : \"ADD\"} value=\"0\" />\n            <Tab style={styles.tab} label=\"REVIEW\" value=\"1\" />\n          </Tabs>\n          <FlatButton style={styles.logout} onClick={this._handleLogout}>LOGOUT</FlatButton>\n        </AppBar>\n        {view}\n      </div>\n    )\n  }\n\n})\n\nexport default Container\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":53,"column":26},"end":{"row":53,"column":43}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"3":{"range":{"start":{"row":61,"column":26},"end":{"row":61,"column":42}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"4":{"range":{"start":{"row":62,"column":16},"end":{"row":62,"column":41}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Container.js","digestWhenLastPersisted":"11634a59410fe401d50bc0176e67ed832615d0a5","preferredLineEnding":null,"nextMarkerId":5,"deserializer":"TextBuffer","version":5},{"id":"4d08118792aa1bda649ffd145f40fcf0","text":"import Reflux from 'Reflux'\nimport React from 'react'\nimport { RaisedButton, TextField, SelectField } from 'material-ui'\nimport DashboardActions from '../actions/DashboardActions'\nimport Store from '../stores'\nimport { History } from 'react-router'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\ninjectTapEventPlugin()\n\nconst DrugDetails = React.createClass({\n\n  mixins: [Reflux.connect(Store), History],\n\n  _handleNameOnChange(e) {\n    this.setState({ drugName: e.target.value })\n  },\n\n  _handleClassOnChange(e) {\n    this.setState({ drugClass: e.target.value })\n  },\n\n  _handleRegulationOnChange(e, selectedIndex, menuItem) {\n    this.setState({ drugRegulation: menuItem.text })\n  },\n\n  _handleSymptomsOnChange(e) {\n    this.setState({ drugSymptoms: e.target.value })\n  },\n\n  _handleInteractionsOnChange(e) {\n    this.setState({ drugInteractions: e.target.value })\n  },\n\n  _handleDosageOnChange(e) {\n    this.setState({ drugDosage: e.target.value })\n  },\n\n  _validateFieldsPopulated() {\n    if (this.state.drugName && this.state.drugClass &&\n      this.state.drugSymptoms && this.state.drugInteractions && this.state.drugDosage) {\n        return false\n      }\n    return true\n  },\n\n  _handleItemSubmit() {\n    let today = new Date()\n    let month = (today.getMonth()%12)+1\n    month = (month < 10 ? '0' + month : month)\n    let drug = {\n      drugName: this.state.drugName,\n      drugClass: this.state.drugClass,\n      drugRegulation: (this.state.drugRegulation ? this.state.drugRegulation : 'Over the counter'),\n      drugSymptoms: this.state.drugSymptoms,\n      drugInteractions: this.state.drugInteractions,\n      drugDosage: this.state.drugDosage,\n      username: this.state.username,\n      date: `${today.getFullYear()}-${month}-${today.getDate()}`\n    }\n    if (this.state.isEditing) {\n      DashboardActions.updateDrug(drug, this.state.selectedDrugId)\n    } else {\n      DashboardActions.addDrug(drug)\n      console.log('submitted drug: ' + JSON.stringify(drug))\n    }\n  },\n\n  _handleCancel() {\n    DashboardActions.cancelEditDrug()\n  },\n\n  componentDidMount() {\n    this.refs.drugNameField.setValue(this.state.drugName)\n    this.refs.classField.setValue(this.state.drugClass)\n    this.refs.symptomField.setValue(this.state.drugSymptoms)\n    this.refs.interactionsField.setValue(this.state.drugInteractions)\n    this.refs.dosageField.setValue(this.state.drugDosage)\n  },\n\n  render() {\n    let options = [\n       { payload: '1', text: 'Over the counter' },\n       { payload: '2', text: 'Prescription' }\n    ]\n\n    return (\n      <div className=\"drugDetails\">\n        <TextField\n          ref=\"drugNameField\"\n          hintText=\"Drug Name\"\n          floatingLabelText=\"Drug Name\"\n          onChange={this._handleNameOnChange} />\n        <br />\n        <TextField\n          hintText=\"Class\"\n          ref=\"classField\"\n          floatingLabelText=\"Class\"\n          onChange={this._handleClassOnChange} />\n        <br />\n        <SelectField\n          style={{marginTop: '20px'}}\n          selectedIndex={this.state.drugRegulation === 'Prescription' ? 1 : 0}\n          ref=\"regulationMenu\"\n          menuItems={options}\n          onChange={this._handleRegulationOnChange} />\n        <br />\n        <TextField\n          hintText=\"Symptoms\"\n          ref=\"symptomField\"\n          floatingLabelText=\"Symptoms\"\n          onChange={this._handleSymptomsOnChange} />\n        <br />\n        <TextField\n          hintText=\"Interactions\"\n          ref=\"interactionsField\"\n          floatingLabelText=\"Interactions\"\n          onChange={this._handleInteractionsOnChange} />\n        <br />\n        <TextField\n          hintText=\"Dosage\"\n          ref=\"dosageField\"\n          floatingLabelText=\"Dosage\"\n          onChange={this._handleDosageOnChange} />\n        <br />\n        {this.state.isEditing ? <RaisedButton label=\"Cancel\" secondary={true} onClick={this._handleCancel}/> : ''}\n        {this.state.isEditing ? ' ' : ''}\n        <RaisedButton\n          label={this.state.isEditing ? 'Update' : 'Submit'}\n          primary={true}\n          disabled={this._validateFieldsPopulated()}\n          onClick={this._handleItemSubmit} />\n      </div>\n    )\n  }\n\n})\n\nexport default DrugDetails\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugDetails.js","digestWhenLastPersisted":"c884d899570776673b2f53395092449b616acc3a","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"0e26eec18fab75e68a43d793ebb779dd","text":"import Reflux from 'Reflux'\nimport React, { Component } from 'react'\nimport { Table, TableRow, TableHeader, TableHeaderColumn, TableBody, TableRowColumn, TableFooter, RaisedButton } from 'material-ui'\nimport DashboardActions from '../actions/DashboardActions'\nimport Store from '../stores'\nimport { History, Link } from 'react-router'\nimport injectTapEventPlugin from 'react-tap-event-plugin'\ninjectTapEventPlugin()\n\nconst DrugList = React.createClass({\n\n  mixins: [Reflux.connect(Store), History],\n\n  componentWillMount() {\n    DashboardActions.getAllDrugs()\n  },\n\n  _onRowSelection(selectedRows) {\n    let rowNumber = -1\n    let drugId = null\n    let drug = null\n    if (selectedRows.length < 1) {\n      rowNumber = -1\n      drugId = null\n      drug = null\n    } else {\n      rowNumber = selectedRows[0]\n      drugId = this.state.drugs[rowNumber].id\n      drug = this.state.drugs[rowNumber].drug\n    }\n    DashboardActions.selectRow(rowNumber, drugId, drug)\n  },\n\n  _handleEditClick(e) {\n    if (this.state.selectedDrugId === null) {\n      return\n    }\n    DashboardActions.editDrug()\n    DashboardActions.switchTab('0')\n    console.log('Editing: ' + this.state.selectedDrugId)\n  },\n\n  _handleDeleteClick(e) {\n    if (this.state.selectedDrugId === null) {\n      return\n    }\n    DashboardActions.deleteDrug(this.state.selectedDrugId, this.state.selectedDrug, this.state.username)\n  },\n\n  render() {\n    let drugs = this.state.drugs.map((item, index) => {\n      let drug = item.drug\n      return (\n        <TableRow key={item.id} selected={this.state.selectedRow === index}>\n          <TableRowColumn>{drug.drugName}</TableRowColumn>\n          <TableRowColumn>{drug.drugClass}</TableRowColumn>\n          <TableRowColumn>{drug.drugRegulation}</TableRowColumn>\n          <TableRowColumn>{drug.username}</TableRowColumn>\n          <TableRowColumn>{drug.date ? drug.date : 'no date specified'}</TableRowColumn>\n        </TableRow>\n      )\n    })\n\n    return (\n      <div>\n        <Table\n          height='300px'\n          fixedHeader={true}\n          selectable={true}\n          onRowSelection={this._onRowSelection}\n          style={{fontFamily: 'Roboto, sans-serif'}} >\n          <TableHeader displaySelectAll={false}>\n            <TableRow>\n              <TableHeaderColumn colSpan=\"5\" style={{textAlign: 'center'}}>\n                Drug List\n              </TableHeaderColumn>\n            </TableRow>\n            <TableRow>\n              <TableHeaderColumn tooltip='Drug Name'>Name</TableHeaderColumn>\n              <TableHeaderColumn tooltip='Drug Class'>Class</TableHeaderColumn>\n              <TableHeaderColumn tooltip='Drug Regulation'>Regulation</TableHeaderColumn>\n              <TableHeaderColumn tooltip='User who added this drug'>User</TableHeaderColumn>\n              <TableHeaderColumn tooltip='Date drug added (YYYY-MM-DD)'>Date</TableHeaderColumn>\n            </TableRow>\n          </TableHeader>\n          <TableBody\n            deselectOnClickaway={false}\n            showRowHover={true}\n            >\n            {drugs}\n          </TableBody>\n        </Table>\n        <div style={{float: 'right', margin: '20px 50px 0px 0px'}}>\n          <RaisedButton label=\"EDIT\" secondary={true} onClick={this._handleEditClick} />\n          {' '}\n          <RaisedButton label=\"DELETE\" primary={true} onClick={this._handleDeleteClick} />\n        </div>\n      </div>\n    )\n  }\n\n})\n\nexport default DrugList\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugList.js","digestWhenLastPersisted":"2c23084244089d0ea7876bb36a613eee4df92d4a","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"78d4690121d15a19dd6c234080cb959e","text":"import React, { Component } from 'react'\nimport Reflux from 'Reflux'\nimport mui, { AppBar, Card, FlatButton, TextField, RaisedButton, CircularProgress } from 'material-ui'\nimport DashboardActions from '../actions/DashboardActions'\nimport Store from '../stores'\nimport { History } from 'react-router'\n\nconst Login = React.createClass({\n\n  mixins: [Reflux.connect(Store), History],\n\n  _handleUsername(e) {\n    this.setState({ username: e.target.value, usernameErrorText: \"\" })\n  },\n\n  _handlePassword(e) {\n    this.setState({ password: e.target.value, passwordErrorText: \"\" })\n  },\n\n  _handleLoginClick() {\n    this.setState({ isLoading: true })\n    DashboardActions.login(this.state.username, this.state.password)\n  },\n\n  _handleKeyDown(e) {\n    if (e.key === 'Enter' && this.state.username && this.state.password) {\n      this._handleLoginClick()\n    }\n  },\n\n  _validateUsername(e) {\n    let errorText = \"\"\n    if (!e.target.value) { errorText = \"Invalid username\" }\n    this.setState({ usernameErrorText: errorText })\n  },\n\n  _validatePassword(e) {\n    let errorText = \"\"\n    if (!e.target.value) { errorText = \"Invalid password\" }\n    this.setState({ passwordErrorText: errorText })\n  },\n\n  componentDidUpdate() {\n    if (this.state.loggedIn) {\n      this.history.pushState(null, '/details', null)\n    }\n  },\n\n  render() {\n    let view = this.state.isLoading ?\n    <CircularProgress\n      id=\"LoginLoader\"\n      mode=\"indeterminate\" /> :\n        <div>\n          <AppBar\n            title=\"Medical App\"\n            showMenuIconButton={false} />\n          <Card className=\"loginCard\">\n              <br />\n            <TextField\n              label=\"Username\"\n              floatingLabelText=\"Username\"\n              hintText=\"Username\"\n              errorText={this.state.usernameErrorText}\n              onBlur={this._validateUsername}\n              onChange={this._handleUsername}\n              onKeyDown={this._handleKeyDown} />\n              <br />\n            <TextField\n              className=\"passwordField\"\n              label=\"Password\"\n              floatingLabelText=\"Password\"\n              hintText=\"Password\"\n              errorText={this.state.passwordErrorText}\n              type=\"password\"\n              onBlur={this._validatePassword}\n              onChange={this._handlePassword}\n              onKeyDown={this._handleKeyDown} />\n              <br />\n            <RaisedButton\n              label=\"Login\"\n              type=\"submit\"\n              secondary={true}\n              disabled={!(this.state.username && this.state.password)}\n              onClick={this._handleLoginClick}\n              style={{\n                marginTop: '40px',\n                marginLeft: '80px'\n              }} />\n          </Card>\n        </div>\n    return (\n      <div className=\"centered\">\n        {view}\n        {this.props.children}\n      </div>\n    )\n  }\n\n})\n\nexport default Login\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":91,"column":4},"end":{"row":91,"column":4}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":26,"undoStack":[],"redoStack":[{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,12],[91,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,12],[91,13]],"newRange":[[91,12],[91,12]],"oldText":";","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,13],[91,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,13],[91,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,12],[91,12]],"newRange":[[91,12],[91,13]],"oldText":"","newText":";"}},{"type":"change","content":{"oldRange":[[91,11],[91,11]],"newRange":[[91,11],[91,12]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[91,10],[91,10]],"newRange":[[91,10],[91,11]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[91,9],[91,9]],"newRange":[[91,9],[91,10]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[91,8],[91,8]],"newRange":[[91,8],[91,9]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[91,7],[91,7]],"newRange":[[91,7],[91,8]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[91,6],[91,6]],"newRange":[[91,6],[91,7]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[91,5],[91,5]],"newRange":[[91,5],[91,6]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[91,4],[91,4]],"newRange":[[91,4],[91,5]],"oldText":"","newText":"d"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,4],[91,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,4],[91,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,4],[91,6]],"newRange":[[91,4],[91,4]],"oldText":"  ","newText":""}},{"type":"change","content":{"oldRange":[[91,6],[91,8]],"newRange":[[91,6],[91,6]],"oldText":"  ","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,8],[91,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,8],[91,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,0],[91,0]],"newRange":[[91,0],[91,8]],"oldText":"","newText":"        "}},{"type":"change","content":{"oldRange":[[91,0],[91,1]],"newRange":[[91,0],[91,0]],"oldText":"d","newText":""}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,1],[91,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[91,1],[91,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,0],[91,0]],"newRange":[[91,0],[91,1]],"oldText":"","newText":"d"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,0],[91,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[92,4],[92,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[91,0],[91,4]],"newRange":[[91,0],[91,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[92,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[91,4],[91,4]],"newRange":[[91,4],[92,0]],"oldText":"","newText":"\n"}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[91,4],[91,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js","digestWhenLastPersisted":"db80122aa3f255956e4102307a5d8447414027b9","preferredLineEnding":null,"nextMarkerId":18,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/App.js","bufferId":"b0451cf055b46a35d2c7fe3f36688537","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Container.js","bufferId":"7faa52e554aa4ad58c386a37ff74606d","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":12,"softTabs":true,"firstVisibleScreenRow":83,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugDetails.js","bufferId":"4d08118792aa1bda649ffd145f40fcf0","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":16,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugList.js","bufferId":"0e26eec18fab75e68a43d793ebb779dd","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":20,"softTabs":true,"firstVisibleScreenRow":54,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js","bufferId":"78d4690121d15a19dd6c234080cb959e","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-babel","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-02-05T01:32:03.078Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/App.js","colorMarkers":[]},"8":{"id":8,"path":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Container.js","colorMarkers":[{"markerId":"2","bufferRange":[[53,26],[53,43]],"color":[239,249,58,1],"text":"rgb(239, 249, 58)","variables":[]},{"markerId":"3","bufferRange":[[61,26],[61,42]],"color":[0,0,0,0],"text":"rgba(0, 0, 0, 0)","variables":[]},{"markerId":"4","bufferRange":[[62,16],[62,41]],"color":[255,255,255,0.55],"text":"rgba(255, 255, 255, 0.55)","variables":[]}]},"12":{"id":12,"path":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugDetails.js","colorMarkers":[]},"16":{"id":16,"path":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugList.js","colorMarkers":[]},"20":{"id":20,"path":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js","colorMarkers":[]}},"paths":["/Users/vmaudgalya/projects/personal/dashboard/client/src/main.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/app.core.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/app.ios.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/app.md.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/app.variables.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/pages/page1/page1.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/pages/page2/page2.scss","/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/pages/page3/page3.scss"],"variables":{"deserializer":"VariablesCollection","content":[{"name":"$colors","value":"(","path":"/Users/vmaudgalya/projects/personal/dashboard/app/cutePuppyPics/app/app.variables.scss","range":[955,965],"line":22}]}}},"fuzzy-finder":{"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/App.js":1454635660045,"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Container.js":1454635661315,"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugDetails.js":1454635668025,"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/DrugList.js":1454635681802,"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js":1454635684207},"metrics":{"sessionLength":271333},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/vmaudgalya/projects/personal/dashboard":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"app":{"isExpanded":false,"entries":{}},"client":{"isExpanded":true,"entries":{"data":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"src":{"isExpanded":true,"entries":{"actions":{"isExpanded":false,"entries":{}},"components":{"isExpanded":true,"entries":{}},"routes":{"isExpanded":false,"entries":{}},"stores":{"isExpanded":false,"entries":{}}}}}},"server":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/vmaudgalya/projects/personal/dashboard/client/src/components/Login.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}
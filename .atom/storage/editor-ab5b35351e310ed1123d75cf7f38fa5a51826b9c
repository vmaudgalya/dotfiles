{"version":1,"windowDimensions":{"x":0,"y":0,"width":1022,"height":896,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator"],"buffers":[{"id":"9abddaaa0d36467180c9bc28e3f1947c","text":"//\n//  Evaluator.cpp\n//  Evaluator\n//\n//  Created by Maudgalya, Varun on 4/17/16.\n//  Copyright Â© 2016 Maudgalya, Varun. All rights reserved.\n//\n\n#include \"Evaluator.hpp\"\n#include <string>\n#include <map>\n#include <fstream>\n#include <iostream>\n\n\nusing namespace std;\n\nEvaluator::Evaluator(string filename) {\n    this->filename = filename;\n}\n\nvoid Evaluator::processFile() {\n//    map <string, string> lhsToRhs;\n//    map <string, int> variableValues;\n    \n    string line;\n    \n    cout << \"filename is: \" << filename << endl;\n    \n    ifstream myfile;\n    myfile.open(filename);\n    \n    if(!myfile.is_open()) {\n        cout << \"failure!\" << endl;\n        exit(EXIT_FAILURE);\n    }\n    \n    char word[50];\n    myfile >> word;\n    while(myfile.good()) {\n        cout << word << \" \" << endl;\n        myfile >> word;\n    }\n    \n    \n//    if (myfile.is_open()) {\n//        while (getline(myfile,line)) {\n//            cout << line << '\\n';\n//        }\n//        myfile.close();\n//    }\n    \n//    else cout << \"Unable to open file\";\n    \n    \n    \n}","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp","digestWhenLastPersisted":"8234bf944c0c5eff6d7a97b86b7493227740927e","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":14,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp","bufferId":"9abddaaa0d36467180c9bc28e3f1947c","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-c","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/a.out"]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-04-18T02:21:55.631Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"8":{"id":8,"path":"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp":1460946095352},"metrics":{"sessionLength":43116},"tree-view":{"directoryExpansionStates":{"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/vmaudgalya/Desktop/c++/Evaluator/Evaluator/Evaluator.cpp","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}
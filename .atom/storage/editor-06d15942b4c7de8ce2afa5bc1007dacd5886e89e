{"version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":852,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers"],"buffers":[{"text":"'use strict';\n\nvar Nemo = require('nemo');\nvar util = require('../../../lib/util');\nvar Login = require('../../../lib/loginHelper');\nvar testData = require('../../../data/hawk/testdata/merchant');\nvar locator = require('../../../locator/pages/customersPage');\nvar expectedLinks = require('../../../data/hawk/expectedData/customerData').links;\nvar expectedAllCustomersTileText = require('../../../data/hawk/expectedData/customerData').allCustomersText;\nvar expectedAllCustomersTileData = require('../../../data/hawk/expectedData/customerData').allCustomersData;\nvar expectedMapViewTileText = require('../../../data/hawk/expectedData/customerData').mapViewText;\nvar customersUrl = require('../../../config/config').data.customerPageUrl;\nvar baseUrl = require('../../../config/config').data.baseUrl;\nvar login, nemo;\n\ndescribe('Validate Customers Page @CustomersSuite@', function() {\n\n  before(function(done) {\n    nemo = Nemo(done);\n    login = new Login(nemo);\n  });\n\n  after(function(done) {\n    nemo.driver.quit().then(done);\n  });\n\n  it('Validate Customers header link', function(done) {\n    login.userLogin(testData.data1.email, testData.data1.password).then(function() {\n      nemo.view._waitVisible(locator.moreDropDown, 35000).then(function() {\n        nemo.driver.get(baseUrl + customersUrl).then(function() {\n          nemo.driver.actions().mouseMove(nemo.view._find(locator.moreDropDown)).perform().then(function(){\n            util.assertLink({\n              nemo: nemo,\n              locator: locator.customersLink,\n              text: expectedLinks[0].text,\n              done: done\n            });\n          });\n        });\n      });\n    });\n  });\n\n  it('Validate Map View tile link', function(done) {\n    nemo.view._waitVisible(locator.mapViewTile, 25000).then(function() {\n      nemo.view._find(locator.mapViewTile).click().then(function() {\n        nemo.driver.sleep(15000).then(function() {\n          done();\n        }, function(err) {\n          done(err);\n        });\n      });\n    });\n  });\n\n  it('Validate Map presence on page', function(done) {\n    nemo.view._waitVisible(locator.map, 25000).then(function() {\n      nemo.view._find(locator.map).then(function() {\n        done();\n      }, function(err) {\n        done(err);\n      });\n    });\n  });\n\n  it('Validate Year Slider presence on page', function(done) {\n    nemo.view._find(locator.yearSlider).then(function() {\n      done();\n    }, function(err) {\n      done(err);\n    });\n  });\n\n  /* Validate presence and text of all elements that appear under Map View */\n  for (var text in expectedMapViewTileText) {\n    var name = expectedMapViewTileText[text].name;\n    it('Validate ' + (name.indexOf('Button') > 0 ? name + ' Text' : name), function(done) {\n      nemo.view._waitVisible(locator.customButtonText, 25000).then(function() {\n        util.assertTextContent({\n          nemo: nemo,\n          locator: expectedMapViewTileText[text].locator,\n          text: expectedMapViewTileText[text].text,\n          done: done,\n          message: 'Failure to validate ' + expectedMapViewTileText[text].name\n        });\n      });\n    });\n  }\n\n  it('Validate All Customers tile link', function(done) {\n    nemo.view._find(locator.allCustomersTile).click().then(function() {\n      nemo.driver.sleep(5000).then(function() {\n        done();\n      }, function(err) {\n        done(err);\n      });\n    });\n  });\n\n  /* Validate presence and text of all elements that appear under All Customers Tile View */\n  for (var text in expectedAllCustomersTileText) {\n    it('Validate ' + expectedAllCustomersTileText[text].name, function(done) {\n      nemo.view._waitVisible(locator.customerNameText, 25000).then(function() {\n        util.assertTextContent({\n          nemo: nemo,\n          locator: expectedAllCustomersTileText[text].locator,\n          text: expectedAllCustomersTileText[text].text,\n          done: done,\n          message: 'Failure to validate ' + expectedAllCustomersTileText[text].name\n        });\n      });\n    });\n  }\n\n  /* Validate presence and text of all data in first row of All Customers Tile */\n  for (var data in expectedAllCustomersTileData) {\n    it('Validate ' + expectedAllCustomersTileData[data].name, function(done) {\n      nemo.view._find(expectedAllCustomersTileData[data].locator).getText().then(function (text) {\n        // console.log('actual text: ' + text);\n        // console.log('expected text: ' + expectedAllCustomersTileData[data].text);\n        // console.log('index: ' + text.indexOf(expectedAllCustomersTileData[data].text));\n        if (text.indexOf(expectedAllCustomersTileData[data].text) > 0) {\n          done();\n        } else {\n          console.log('Error: actual text \"' + text + '\" does not contain expected text: \"' + expectedAllCustomersTileData[data].text + '\"');\n          throw 'actual text \"' + text + '\" does not contain expected text: \"' + expectedAllCustomersTileData[data].text + '\"';\n        }\n      }, function(err) {\n        done(err);\n      });\n    });\n  }\n\n});\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":86,"id":"0","maintainHistory":false,"markersById":{"0-84":{"range":{"start":{"row":102,"column":29},"end":{"row":102,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-85":{"range":{"start":{"row":102,"column":29},"end":{"row":102,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":102,"column":29},"end":{"row":102,"column":53}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js","digestWhenLastPersisted":"a0fca35a93f2c7c9ef620347995798228a9b83bd","preferredLineEnding":null,"deserializer":"TextBuffer","version":4}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":87,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-babel","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"linter":{"scope":"File"},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2015-12-27T23:16:07.240Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js":1451255441890},"metrics":{"sessionLength":2744561},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/vmaudgalya/projects/exp/master/bizExpNode/test/functional/nemo/spec/teststage/customers/customersPage.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}